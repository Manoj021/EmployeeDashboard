{"ast":null,"code":"import BaseSurface from './core/surface';\nimport SurfaceFactory from './surface-factory';\n\nvar Surface = function (BaseSurface) {\n  function Surface() {\n    BaseSurface.apply(this, arguments);\n  }\n\n  if (BaseSurface) Surface.__proto__ = BaseSurface;\n  Surface.prototype = Object.create(BaseSurface && BaseSurface.prototype);\n  Surface.prototype.constructor = Surface;\n  var staticAccessors = {\n    support: {\n      configurable: true\n    }\n  };\n\n  staticAccessors.support.get = function () {\n    return SurfaceFactory.support;\n  };\n\n  Surface.create = function create(element, options) {\n    return SurfaceFactory.current.create(element, options);\n  };\n\n  Object.defineProperties(Surface, staticAccessors);\n  return Surface;\n}(BaseSurface);\n\nexport default Surface;","map":null,"metadata":{},"sourceType":"module"}