{"ast":null,"code":"import { defined } from '../util';\nvar GRADIENT = \"Gradient\";\n\nvar paintable = function paintable(TBase) {\n  return function (TBase) {\n    function anonymous() {\n      TBase.apply(this, arguments);\n    }\n\n    if (TBase) anonymous.__proto__ = TBase;\n    anonymous.prototype = Object.create(TBase && TBase.prototype);\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.fill = function fill(color, opacity) {\n      var options = this.options;\n\n      if (defined(color)) {\n        if (color && color.nodeType !== GRADIENT) {\n          var newFill = {\n            color: color\n          };\n\n          if (defined(opacity)) {\n            newFill.opacity = opacity;\n          }\n\n          options.set(\"fill\", newFill);\n        } else {\n          options.set(\"fill\", color);\n        }\n\n        return this;\n      }\n\n      return options.get(\"fill\");\n    };\n\n    anonymous.prototype.stroke = function stroke(color, width, opacity) {\n      if (defined(color)) {\n        this.options.set(\"stroke.color\", color);\n\n        if (defined(width)) {\n          this.options.set(\"stroke.width\", width);\n        }\n\n        if (defined(opacity)) {\n          this.options.set(\"stroke.opacity\", opacity);\n        }\n\n        return this;\n      }\n\n      return this.options.get(\"stroke\");\n    };\n\n    return anonymous;\n  }(TBase);\n};\n\nexport default paintable;","map":null,"metadata":{},"sourceType":"module"}