{"ast":null,"code":"import GroupNode from './group-node';\nimport traversable from '../mixins/traversable';\nimport { animationFrame, throttle } from '../common';\nvar FRAME_DELAY = 1000 / 60;\n\nvar RootNode = function (superclass) {\n  function RootNode(canvas, size) {\n    superclass.call(this);\n    this.canvas = canvas;\n    this.size = size;\n    this.ctx = canvas.getContext(\"2d\");\n\n    var invalidateHandler = this._invalidate.bind(this);\n\n    this.invalidate = throttle(function () {\n      animationFrame(invalidateHandler);\n    }, FRAME_DELAY);\n  }\n\n  if (superclass) RootNode.__proto__ = superclass;\n  RootNode.prototype = Object.create(superclass && superclass.prototype);\n  RootNode.prototype.constructor = RootNode;\n\n  RootNode.prototype.destroy = function destroy() {\n    superclass.prototype.destroy.call(this);\n    this.canvas = null;\n    this.ctx = null;\n  };\n\n  RootNode.prototype.load = function load(elements, pos, cors) {\n    this.loadElements(elements, pos, cors);\n\n    this._invalidate();\n  };\n\n  RootNode.prototype._rescale = function _rescale(scale) {\n    var ref = this;\n    var canvas = ref.canvas;\n    var size = ref.size;\n    canvas.width = size.width * scale;\n    canvas.height = size.height * scale;\n    this.ctx.scale(scale, scale);\n  };\n\n  RootNode.prototype._devicePixelRatio = function _devicePixelRatio() {\n    if (window.devicePixelRatio === 'number') {\n      return window.devicePixelRatio;\n    }\n\n    return 1;\n  };\n\n  RootNode.prototype._invalidate = function _invalidate(options) {\n    if (!this.ctx) {\n      return;\n    }\n\n    var fixedScale = options && options.fixedScale;\n    var scale = fixedScale ? 1 : this._devicePixelRatio();\n\n    this._rescale(scale);\n\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.renderTo(this.ctx);\n  };\n\n  return RootNode;\n}(traversable(GroupNode, \"childNodes\"));\n\nexport default RootNode;","map":null,"metadata":{},"sourceType":"module"}