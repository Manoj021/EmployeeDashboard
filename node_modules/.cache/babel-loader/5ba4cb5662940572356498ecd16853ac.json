{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Manoj Mukthavaram\\\\Documents\\\\ReactApps\\\\emp-dashboard\\\\src\\\\Charts\\\\LineChart.js\",\n    _this2 = this;\n\nimport React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport color from \"rcolor\";\nvar initialState = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [{\n    backgroundColor: \"rgba(255,99,132,0.2)\",\n    borderColor: \"rgba(255,99,132,1)\",\n    borderWidth: 1,\n    hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n    hoverBorderColor: \"rgba(255,99,132,1)\",\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar Graph = /*#__PURE__*/function (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph() {\n    _classCallCheck(this, Graph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Graph).apply(this, arguments));\n  }\n\n  _createClass(Graph, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState(initialState);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      setInterval(function () {\n        var oldDataSet = _this.state.datasets[0];\n        var newData = [];\n\n        for (var x = 0; x < _this.state.labels.length; x++) {\n          newData.push(Math.floor(Math.random() * 50) + 50);\n        }\n\n        var newDataSet = _objectSpread({}, oldDataSet);\n\n        newDataSet.data = newData;\n        newDataSet.backgroundColor = color();\n        newDataSet.borderColor = color();\n        newDataSet.hoverBackgroundColor = color();\n        newDataSet.hoverBorderColor = color();\n\n        var newState = _objectSpread({}, initialState, {\n          datasets: [newDataSet]\n        });\n\n        _this.setState(newState);\n      }, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Bar, {\n        data: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nvar ChartContainer = function ChartContainer() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartContainer;","map":{"version":3,"sources":["C:/Users/Manoj Mukthavaram/Documents/ReactApps/emp-dashboard/src/Charts/LineChart.js"],"names":["React","Component","Bar","color","initialState","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Graph","setState","_this","setInterval","oldDataSet","state","newData","x","length","push","Math","floor","random","newDataSet","newState","ChartContainer"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADW;AAEnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,eAAe,EAAE,sBADnB;AAEEC,IAAAA,WAAW,EAAE,oBAFf;AAGEC,IAAAA,WAAW,EAAE,CAHf;AAIEC,IAAAA,oBAAoB,EAAE,sBAJxB;AAKEC,IAAAA,gBAAgB,EAAE,oBALpB;AAMEC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AANR,GADQ;AAFS,CAArB;;IAcMC,K;;;;;;;;;;;yCACiB;AACnB,WAAKC,QAAL,CAAcV,YAAd;AACD;;;wCACmB;AAClB,UAAIW,KAAK,GAAG,IAAZ;;AAEAC,MAAAA,WAAW,CAAC,YAAY;AACtB,YAAIC,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAYZ,QAAZ,CAAqB,CAArB,CAAjB;AACA,YAAIa,OAAO,GAAG,EAAd;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACG,KAAN,CAAYb,MAAZ,CAAmBgB,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClDD,UAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAA9C;AACD;;AAED,YAAIC,UAAU,qBACTT,UADS,CAAd;;AAIAS,QAAAA,UAAU,CAACd,IAAX,GAAkBO,OAAlB;AACAO,QAAAA,UAAU,CAACnB,eAAX,GAA6BJ,KAAK,EAAlC;AACAuB,QAAAA,UAAU,CAAClB,WAAX,GAAyBL,KAAK,EAA9B;AACAuB,QAAAA,UAAU,CAAChB,oBAAX,GAAkCP,KAAK,EAAvC;AACAuB,QAAAA,UAAU,CAACf,gBAAX,GAA8BR,KAAK,EAAnC;;AAEA,YAAIwB,QAAQ,qBACPvB,YADO;AAEVE,UAAAA,QAAQ,EAAE,CAACoB,UAAD;AAFA,UAAZ;;AAKAX,QAAAA,KAAK,CAACD,QAAN,CAAea,QAAf;AACD,OAxBU,EAwBR,IAxBQ,CAAX;AAyBD;;;6BACQ;AACP,0BAAO,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAnCiBjB,S;;AAsCpB,IAAM2B,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAeA,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport color from \"rcolor\";\r\n\r\nconst initialState = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      backgroundColor: \"rgba(255,99,132,0.2)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [65, 59, 80, 81, 56, 55, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nclass Graph extends Component {\r\n  componentWillMount() {\r\n    this.setState(initialState);\r\n  }\r\n  componentDidMount() {\r\n    var _this = this;\r\n\r\n    setInterval(function () {\r\n      var oldDataSet = _this.state.datasets[0];\r\n      var newData = [];\r\n\r\n      for (var x = 0; x < _this.state.labels.length; x++) {\r\n        newData.push(Math.floor(Math.random() * 50) + 50);\r\n      }\r\n\r\n      var newDataSet = {\r\n        ...oldDataSet,\r\n      };\r\n\r\n      newDataSet.data = newData;\r\n      newDataSet.backgroundColor = color();\r\n      newDataSet.borderColor = color();\r\n      newDataSet.hoverBackgroundColor = color();\r\n      newDataSet.hoverBorderColor = color();\r\n\r\n      var newState = {\r\n        ...initialState,\r\n        datasets: [newDataSet],\r\n      };\r\n\r\n      _this.setState(newState);\r\n    }, 5000);\r\n  }\r\n  render() {\r\n    return <Bar data={this.state} />;\r\n  }\r\n}\r\n\r\nconst ChartContainer = () => {\r\n  return (\r\n    <div>\r\n      <Graph />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartContainer;\r\n"]},"metadata":{},"sourceType":"module"}